/* 3) Performance analysis

---- analyze the yearly performance of products by comparing each product's sales 
---to both it's average sales performance and the previous year's sales
*/ 


WITH yearly_product_sales AS (

SELECT
	DATETRUNC(year, f.order_date) AS order_year,
	d.product_name,
	SUM(sales_amount) AS current_sales
FROM gold.fact_sales f
LEFT JOIN gold.dim_products d
ON d.product_key = f.product_key
WHERE order_date IS NOT NULL
GROUP BY 
DATETRUNC(year, f.order_date),
d.product_name
) 
SELECT 
	order_year,
	product_name,
	current_sales,
	AVG(current_sales) OVER (PARTITION BY product_name) AS average_sales,
	current_sales - AVG(current_sales) OVER (PARTITION BY product_name) AS diff_avg,
CASE WHEN current_sales - AVG(current_sales) OVER (PARTITION BY product_name) > 0 THEN 'Above Average'
	WHEN current_sales - AVG(current_sales) OVER (PARTITION BY product_name) < 0 THEN 'Below Average'
	ELSE 'Average'
	END avg_change,
	LAG(current_sales) OVER (PARTITION BY product_name ORDER BY order_Year) AS previous_year_sales,
	current_sales - LAG(current_sales) OVER (PARTITION BY product_name ORDER BY order_Year) AS sales_vs_previous_year,
CASE WHEN current_sales - LAG(current_sales) OVER (PARTITION BY product_name ORDER BY order_Year) > 0 THEN 'Increase'
	WHEN current_sales - LAG(current_sales) OVER (PARTITION BY product_name ORDER BY order_Year) < 0 THEN 'Decrease'
	ELSE 'No change'
	END yearly_comparison
	---- year by year analysis
FROM yearly_product_sales
ORDER BY 
product_name,
order_year
